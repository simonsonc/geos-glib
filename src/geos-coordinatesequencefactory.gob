%privateheader{
#include <geos/geom/CoordinateSequenceFactory.h>
#include <geos/geom/CoordinateSequence.h>
%}

%alltop{
#include "geos-coordinatesequence.h"
%}

%{
#include "geos-coordinatesequence-private.h"
%}

%header{
G_BEGIN_DECLS
%}

class Geos:CoordinateSequenceFactory from G:Object {
    private const geos::geom::CoordinateSequenceFactory* hndl;

    protected Geos:CoordinateSequenceFactory* new_from_ref (const geos::geom::CoordinateSequenceFactory* ref) {
        auto self = GET_NEW;
        self->_priv->hndl = ref;
        return self;
    }

    /**
     * create
     *
     * Create a coordinate sequence
     *
     * Return value: (transfer full): a #GeosCoordinateSequence.
     */
    public Geos:CoordinateSequence* create(self) {
        return geos_coordinatesequence_new_from_ref(self->_priv->hndl->create());
    }

    /**
     * create_with_size
     *
     * Create a coordinate sequence
     *
     * Return value: (transfer full): a #GeosCoordinateSequence.
     */
    public Geos:CoordinateSequence* create_with_size(self, gsize size, gsize dimension) {
        return geos_coordinatesequence_new_from_ref(self->_priv->hndl->create(size, dimension));
    }
}

%header{
G_END_DECLS
%}
